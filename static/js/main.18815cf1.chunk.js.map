{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","App","useState","todosFromServer","copyTodos","setCopyTodos","selectedUserName","setSelectedUserName","newTitle","setNewTitle","errorTitle","setErrorTitle","errorUser","setErrorUser","maxId","Math","max","createTodo","userName","usersFromServer","find","newTodo","addHandler","event","preventDefault","useEffect","action","method","type","placeholder","value","onChange","e","currentTarget","target","disabled","selected","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18815cf1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../types/Todo';\n\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed, title, user, id,\n  } = todo;\n\n  return (\n    <article data-id={id + 1} className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState, useEffect } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\n\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport const App = () => {\n  const [copyTodos, setCopyTodos] = useState([...todosFromServer]);\n  const [selectedUserName, setSelectedUserName] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const maxId = Math.max(...todosFromServer.map(todo => todo.id));\n  const findUser = (userName: string): User | null => {\n    return usersFromServer.find(user => user.name === userName) || null;\n  };\n\n  const checkError = () => {\n    if (!newTitle) {\n      setErrorTitle(true);\n    }\n\n    if (!selectedUserName) {\n      setErrorUser(true);\n    }\n  };\n\n  const createTodo = () => {\n    const user = findUser(selectedUserName);\n\n    if (user && newTitle) {\n      const newTodo = {\n        id: maxId,\n        title: newTitle,\n        completed: false,\n        userId: user.id,\n      };\n\n      setCopyTodos(todos => [...todos, newTodo]);\n      setNewTitle('');\n      setSelectedUserName('');\n    }\n  };\n\n  const addHandler\n  = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n    checkError();\n    createTodo();\n  };\n\n  const todos: Todo[] = copyTodos.map(todo => {\n    return {\n      ...todo,\n      user: usersFromServer.find(user => todo.userId === user.id),\n    };\n  });\n\n  useEffect(() => {\n    if (newTitle) {\n      setErrorTitle(false);\n    }\n\n    if (selectedUserName) {\n      setErrorUser(false);\n    }\n  }, [newTitle, selectedUserName]);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={newTitle}\n              onChange={(e) => {\n                setNewTitle(e.currentTarget.value);\n              }}\n            />\n          </label>\n          {(errorTitle\n             && <span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              onChange={(e) => setSelectedUserName(e.target.value)}\n              value={!selectedUserName ? '0' : selectedUserName}\n            >\n              {!selectedUserName\n               && (<option value=\"0\" disabled selected>Choose a user</option>)}\n              {usersFromServer.map(user => (\n                <option\n                  key={user.name}\n                  value={user.name}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {errorUser\n           && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={(e) => addHandler(e)}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}